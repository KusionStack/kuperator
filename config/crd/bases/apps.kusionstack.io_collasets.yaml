---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: collasets.apps.kusionstack.io
spec:
  group: apps.kusionstack.io
  names:
    kind: CollaSet
    listKind: CollaSetList
    plural: collasets
    shortNames:
    - cls
    singular: collaset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The desired number of pods.
      jsonPath: .spec.replicas
      name: DESIRED
      type: integer
    - description: The number of currently all pods.
      jsonPath: .status.replicas
      name: CURRENT
      type: integer
    - description: The number of pods available.
      jsonPath: .status.availableReplicas
      name: AVAILABLE
      type: integer
    - description: The number of pods updated.
      jsonPath: .status.updatedReplicas
      name: UPDATED
      type: integer
    - description: The number of pods ready.
      jsonPath: .status.updatedReadyReplicas
      name: UPDATED_READY
      type: integer
    - description: The number of pods updated available.
      jsonPath: .status.updatedAvailableReplicas
      name: UPDATED_AVAILABLE
      type: integer
    - description: The current revision.
      jsonPath: .status.currentRevision
      name: CURRENT_REVISION
      type: string
    - description: The updated revision.
      jsonPath: .status.updatedRevision
      name: UPDATED_REVISION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CollaSet is the Schema for the collasets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CollaSetSpec defines the desired state of CollaSet
            properties:
              historyLimit:
                description: |-
                  Indicate the number of histories to be conserved
                  If unspecified, defaults to 20
                format: int32
                type: integer
              paused:
                description: |-
                  Indicates that the scaling and updating is paused and will not be processed by the
                  CollaSet controller.
                type: boolean
              replicas:
                description: |-
                  Replicas is the desired number of replicas of the given Template.
                  These are replicas in the sense that they are instantiations of the
                  same Template, but individual replicas also have a consistent identity.
                  If unspecified, defaults to 0.
                format: int32
                type: integer
              scaleStrategy:
                description: ScaleStrategy indicates the strategy detail that will
                  be used during pod scaling.
                properties:
                  context:
                    description: |-
                      Context indicates the pool from which to allocate Pod instance ID. CollaSets are allowed to share the
                      same Context. It is not allowed to change.
                      Context defaults to be CollaSet's name.
                    type: string
                  operationDelaySeconds:
                    description: OperationDelaySeconds indicates how many seconds
                      it should delay before operating scale.
                    format: int32
                    type: integer
                  persistentVolumeClaimRetentionPolicy:
                    description: |-
                      PersistentVolumeClaimRetentionPolicy describes the lifecycle of PersistentVolumeClaim
                      created from volumeClaimTemplates. By default, all persistent volume claims are created as needed and
                      deleted after no pod is using them. This policy allows the lifecycle to be altered, for example
                      by deleting persistent volume claims when their CollaSet is deleted, or when their pod is scaled down.
                    properties:
                      whenDeleted:
                        description: |-
                          WhenDeleted specifies what happens to PVCs created from CollaSet
                          VolumeClaimTemplates when the CollaSet is deleted. The default policy
                          of `Delete` policy causes those PVCs to be deleted.
                          `Retain` causes PVCs to not be affected by StatefulSet deletion. The
                        type: string
                      whenScaled:
                        description: |-
                          WhenScaled specifies what happens to PVCs created from StatefulSet
                          VolumeClaimTemplates when the StatefulSet is scaled down. The default
                          policy of `Retain` causes PVCs to not be affected by a scaledown. The
                          `Delete` policy causes the associated PVCs for any excess pods above
                          the replica count to be deleted.
                        type: string
                    type: object
                  podNamingPolicy:
                    description: PodNamingPolicy indicates how a new pod name is generated.
                    type: string
                  podToDelete:
                    description: PodToDelete indicates the pods which will be deleted
                      by CollaSet.
                    items:
                      type: string
                    type: array
                  podToExclude:
                    description: PodToExclude indicates the pods which will be orphaned
                      by CollaSet.
                    items:
                      type: string
                    type: array
                  podToInclude:
                    description: PodToInclude indicates the pods which will be adapted
                      by CollaSet.
                    items:
                      type: string
                    type: array
                type: object
              selector:
                description: |-
                  Selector is a label query over pods that should match the replica count.
                  It must match the pod template's labels.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: |-
                  Template is the object that describes the pod that will be created if
                  insufficient replicas are detected. Each pod stamped out by the CollaSet
                  will fulfill this Template, but have a unique identity from the rest
                  of the CollaSet.
                x-kubernetes-preserve-unknown-fields: true
              updateStrategy:
                description: |-
                  UpdateStrategy indicates the CollaSetUpdateStrategy that will be
                  employed to update Pods in the CollaSet when a revision is made to
                  Template.
                properties:
                  operationDelaySeconds:
                    description: OperationDelaySeconds indicates how many seconds
                      it should delay before operating update.
                    format: int32
                    type: integer
                  podUpgradePolicy:
                    description: PodUpdatePolicy indicates the policy by to update
                      pods.
                    type: string
                  rollingUpdate:
                    description: RollingUpdate is used to communicate parameters when
                      Type is RollingUpdateStatefulSetStrategyType.
                    properties:
                      byLabel:
                        description: ByLabel indicates the update progress is controlled
                          by attaching pod label.
                        type: object
                      byPartition:
                        description: ByPartition indicates the update progress is
                          controlled by partition value.
                        properties:
                          partition:
                            description: |-
                              Partition controls the number of pods in old revisions.
                              Defaults to nil (all pods will be updated)
                            format: int32
                            type: integer
                        type: object
                    type: object
                type: object
              volumeClaimTemplates:
                description: |-
                  VolumeClaimTemplates is a list of claims that pods are allowed to reference.
                  The StatefulSet controller is responsible for mapping network identities to
                  claims in a way that maintains the identity of a pod. Every claim in
                  this list must have at least one matching (by name) volumeMount in one
                  container in the template. A claim in this list takes precedence over
                  any volumes in the template, with the same name.
                items:
                  description: PersistentVolumeClaim is a user's request for and claim
                    to a persistent volume
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        finalizers:
                          items:
                            type: string
                          type: array
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    spec:
                      description: |-
                        spec defines the desired characteristics of a volume requested by a pod author.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        accessModes:
                          description: |-
                            accessModes contains the desired access modes the volume should have.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: |-
                            dataSource field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim)
                            If the provisioner or an external controller can support the specified data source,
                            it will create a new volume based on the contents of the specified data source.
                            When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                            and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                            If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                          x-kubernetes-map-type: atomic
                        dataSourceRef:
                          description: |-
                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                            volume is desired. This may be any object from a non-empty API group (non
                            core object) or a PersistentVolumeClaim object.
                            When this field is specified, volume binding will only succeed if the type of
                            the specified object matches some installed volume populator or dynamic
                            provisioner.
                            This field will replace the functionality of the dataSource field and as such
                            if both fields are non-empty, they must have the same value. For backwards
                            compatibility, when namespace isn't specified in dataSourceRef,
                            both fields (dataSource and dataSourceRef) will be set to the same
                            value automatically if one of them is empty and the other is non-empty.
                            When namespace is specified in dataSourceRef,
                            dataSource isn't set to the same value and must be empty.
                            There are three important differences between dataSource and dataSourceRef:
                            * While dataSource only allows two specific types of objects, dataSourceRef
                              allows any non-core object, as well as PersistentVolumeClaim objects.
                            * While dataSource ignores disallowed values (dropping them), dataSourceRef
                              preserves all values, and generates an error if a disallowed value is
                              specified.
                            * While dataSource only allows local objects, dataSourceRef allows objects
                              in any namespaces.
                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                            (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                            namespace:
                              description: |-
                                Namespace is the namespace of resource being referenced
                                Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: |-
                            resources represents the minimum resources the volume should have.
                            If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                            that are lower than previous value but must still be higher than capacity recorded in the
                            status field of the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.


                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.


                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        selector:
                          description: selector is a label query over volumes to consider
                            for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        storageClassName:
                          description: |-
                            storageClassName is the name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                          type: string
                        volumeMode:
                          description: |-
                            volumeMode defines what type of volume is required by the claim.
                            Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: volumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: |-
                        status represents the current information/status of a persistent volume claim.
                        Read-only.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        accessModes:
                          description: |-
                            accessModes contains the actual access modes the volume backing the PVC has.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          items:
                            type: string
                          type: array
                        allocatedResources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may
                            be larger than the actual capacity when a volume expansion operation is requested.
                            For storage quota, the larger value from allocatedResources and PVC.spec.resources is used.
                            If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.
                            If a volume expansion capacity request is lowered, allocatedResources is only
                            lowered if there are no expansion operations in progress and if the actual volume capacity
                            is equal or lower than the requested capacity.
                            This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
                          type: object
                        capacity:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: capacity represents the actual resources of
                            the underlying volume.
                          type: object
                        conditions:
                          description: |-
                            conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                            resized then the Condition will be set to 'ResizeStarted'.
                          items:
                            description: PersistentVolumeClaimCondition contains details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: lastProbeTime is the time we probed the
                                  condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: lastTransitionTime is the time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: message is the human-readable message
                                  indicating details about last transition.
                                type: string
                              reason:
                                description: |-
                                  reason is a unique, this should be a short, machine understandable string that gives the reason
                                  for condition's last transition. If it reports "ResizeStarted" that means the underlying
                                  persistent volume is being resized.
                                type: string
                              status:
                                type: string
                              type:
                                description: PersistentVolumeClaimConditionType is
                                  a valid value of PersistentVolumeClaimCondition.Type
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        phase:
                          description: phase represents the current phase of PersistentVolumeClaim.
                          type: string
                        resizeStatus:
                          description: |-
                            resizeStatus stores status of resize operation.
                            ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty
                            string by resize controller or kubelet.
                            This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: CollaSetStatus defines the observed state of CollaSet
            properties:
              availableReplicas:
                description: The number of available replicas (ready for at least
                  minReadySeconds) for this replica set.
                format: int32
                type: integer
              collisionCount:
                description: |-
                  Count of hash collisions for the CollaSet. The CollaSet controller
                  uses this field as a collision avoidance mechanism when it needs to
                  create the name for the newest ControllerRevision.
                format: int32
                type: integer
              conditions:
                description: Represents the latest available observations of a CollaSet's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of in place set condition.
                      type: string
                  type: object
                type: array
              currentRevision:
                description: CurrentRevision, if not empty, indicates the version
                  of the CollaSet.
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this CollaSet. It corresponds to the
                  CollaSet's generation, which is updated on mutation by the API Server.
                format: int64
                type: integer
              operatingReplicas:
                description: OperatingReplicas indicates the number of pods during
                  pod ops lifecycle and not finish update-phase.
                format: int32
                type: integer
              readyReplicas:
                description: ReadyReplicas indicates the number of the pod with ready
                  condition
                format: int32
                type: integer
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
              scheduledReplicas:
                description: the number of scheduled replicas for the CollaSet.
                format: int32
                type: integer
              updatedAvailableReplicas:
                description: |-
                  UpdatedAvailableReplicas indicates the number of available updated revision replicas for this CollaSet.
                  A pod is updated available means the pod is ready for updated revision and accessible
                format: int32
                type: integer
              updatedReadyReplicas:
                description: UpdatedReadyReplicas indicates the number of the pod
                  with updated revision and ready condition
                format: int32
                type: integer
              updatedReplicas:
                description: The number of pods in updated version.
                format: int32
                type: integer
              updatedRevision:
                description: UpdatedRevision, if not empty, indicates the version
                  of the CollaSet currently updated.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
