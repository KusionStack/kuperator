---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: collasets.apps.kafed.io
spec:
  group: apps.kafed.io
  names:
    kind: CollaSet
    listKind: CollaSetList
    plural: collasets
    shortNames:
    - cls
    singular: collaset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The desired number of pods.
      jsonPath: .spec.replicas
      name: DESIRED
      type: integer
    - description: The number of currently all pods.
      jsonPath: .status.replicas
      name: CURRENT
      type: integer
    - description: The number of pods updated.
      jsonPath: .status.updatedReplicas
      name: UPDATED
      type: integer
    - description: The number of pods ready.
      jsonPath: .status.updatedReadyReplicas
      name: UPDATED_READY
      type: integer
    - description: The current revision.
      jsonPath: .status.currentRevision
      name: CURRENT_REVISION
      type: string
    - description: The updated revision.
      jsonPath: .status.updatedRevision
      name: UPDATED_REVISION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CollaSet is the Schema for the collasets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CollaSetSpec defines the desired state of CollaSet
            properties:
              historyLimit:
                description: Indicate the number of histories to be conserved If unspecified,
                  defaults to 20
                format: int32
                type: integer
              minReadySeconds:
                description: Minimum number of seconds for which a newly created pod
                  should be ready without any of its container crashing, for it to
                  be considered available. Defaults to 0 (pod will be considered available
                  as soon as it is ready)
                format: int32
                type: integer
              replicas:
                description: Replicas is the desired number of replicas of the given
                  Template. These are replicas in the sense that they are instantiations
                  of the same Template, but individual replicas also have a consistent
                  identity. If unspecified, defaults to 0.
                format: int32
                type: integer
              scaleStrategy:
                description: ScaleStrategy indicates the strategy detail that will
                  be used during pod scaling.
                properties:
                  FQDNTemplate:
                    description: FQDNTemplate is the template to build a FQDN, like
                      "foo-{{.PodNumber}}.company.com"
                    type: string
                  hostnamePolicy:
                    description: HostnamePolicy indicates how the pod hostname is
                      assigned. Defaults to empty.
                    type: string
                  hostnameTemplate:
                    description: HostnameTemplate is the template to build a hostname,
                      like "foo-{{.PodNumber}}"
                    type: string
                  podGroup:
                    description: PodGroup indicates the configMap that holds the pod
                      information.
                    type: string
                  podIdentityPrefix:
                    description: PodIdentityPrefix indicates the prefix of pod numbers.
                    type: string
                  podNamingPolicy:
                    description: PodNamingPolicy indicates how a new pod name is generated.
                    type: string
                  podNumberPolicy:
                    description: PodNumberAllocationPolicy indicates how to allocate
                      a pod number for new pod.
                    type: string
                  podToExclude:
                    description: PodToExclude indicates the pods which will be orphaned
                      by CollaSet.
                    items:
                      type: string
                    type: array
                  podToInclude:
                    description: PodToInclude indicates the pods which will be adapted
                      by CollaSet.
                    items:
                      type: string
                    type: array
                type: object
              selector:
                description: Selector is a label query over pods that should match
                  the replica count. It must match the pod template's labels.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              strategy:
                description: UpgradeStrategy indicates the CollaSetUpdateStrategy
                  that will be employed to update Pods in the CollaSet when a revision
                  is made to Template.
                properties:
                  Partition:
                    description: Indicates the number of the pods in current version
                      for which a upgrading should be paused. Defaults to nil (all
                      of pods will be upgraded)
                    format: int32
                    type: integer
                  minDelaySeconds:
                    description: Minimum number of seconds for which a pod should
                      be really upgraded after marked as upgrading. Defaults to nil
                      (pod will be upgraded immediately)
                    format: int64
                    type: integer
                  pause:
                    description: Indicates that the deployment is paused and will
                      not be processed by the deployment controller.
                    type: boolean
                  podRevisionAwarenessPolicy:
                    description: PodRevisionAwarenessPolicy indicates how the pod
                      aware the current revision itself. This is force to be None,
                      when PodUpgradePolicy is InPlaceIfPossible Defaulting None
                    type: string
                  podUpgradeOrderForced:
                    description: PodUpgradeOrderForced indicates the pods upgrade
                      order is forced to follow the order policy.
                    type: boolean
                  podUpgradeOrderPolicy:
                    description: PodUpgradeOrderPolicy indicates the order by which
                      to choose pod to update
                    type: string
                  podUpgradePolicy:
                    description: PodUpgradePolicy indicates the policy by to update
                      pods.
                    type: string
                  revisionSelectionPolicy:
                    description: RevisionSelectionPolicy indicates the policy how
                      to select revision to create new pod. Defaulting Latest.
                    type: string
                  upgradeLabelStrategy:
                    description: PodUpgradeOrderLabelStrategy carries the label policy
                      related to upgrade pods by label.
                    properties:
                      labelKey:
                        description: LabelKey indicates the label to select pod
                        type: string
                    type: object
                  upgradePriorityStrategy:
                    description: UpgradePriorityStrategy carries the priority order
                      related to upgrade pods by priority.
                    properties:
                      weightPriority:
                        description: WeightPriority describes the list of weight rules.
                        items:
                          properties:
                            selector:
                              description: Selector describe the rule to select the
                                targets.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight is the weight of the selected targets.
                              format: int32
                              type: integer
                          required:
                          - selector
                          - weight
                          type: object
                        type: array
                    required:
                    - weightPriority
                    type: object
                type: object
              volumeClaimTemplates:
                description: volumeClaimTemplates is a list of claims that pods are
                  allowed to reference. The StatefulSet controller is responsible
                  for mapping network identities to claims in a way that maintains
                  the identity of a pod. Every claim in this list must have at least
                  one matching (by name) volumeMount in one container in the template.
                  A claim in this list takes precedence over any volumes in the template,
                  with the same name.
                items:
                  description: PersistentVolumeClaim is a user's request for and claim
                    to a persistent volume
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      type: object
                    spec:
                      description: 'Spec defines the desired characteristics of a
                        volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim) If the provisioner
                            or an external controller can support the specified data
                            source, it will create a new volume based on the contents
                            of the specified data source. If the AnyVolumeDataSource
                            feature gate is enabled, this field will always have the
                            same contents as the DataSourceRef field.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                          x-kubernetes-map-type: atomic
                        dataSourceRef:
                          description: 'Specifies the object from which to populate
                            the volume with data, if a non-empty volume is desired.
                            This may be any local object from a non-empty API group
                            (non core object) or a PersistentVolumeClaim object. When
                            this field is specified, volume binding will only succeed
                            if the type of the specified object matches some installed
                            volume populator or dynamic provisioner. This field will
                            replace the functionality of the DataSource field and
                            as such if both fields are non-empty, they must have the
                            same value. For backwards compatibility, both fields (DataSource
                            and DataSourceRef) will be set to the same value automatically
                            if one of them is empty and the other is non-empty. There
                            are two important differences between DataSource and DataSourceRef:
                            * While DataSource only allows two specific types of objects,
                            DataSourceRef allows any non-core object, as well as PersistentVolumeClaim
                            objects. * While DataSource ignores disallowed values
                            (dropping them), DataSourceRef preserves all values, and
                            generates an error if a disallowed value is specified.
                            (Alpha) Using this field requires the AnyVolumeDataSource
                            feature gate to be enabled.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                          x-kubernetes-map-type: atomic
                        resources:
                          description: 'Resources represents the minimum resources
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for
                            binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: 'Status represents the current information/status
                        of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the actual access modes
                            the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        capacity:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Represents the actual resources of the underlying
                            volume.
                          type: object
                        conditions:
                          description: Current Condition of persistent volume claim.
                            If underlying persistent volume is being resized then
                            the Condition will be set to 'ResizeStarted'.
                          items:
                            description: PersistentVolumeClaimCondition contails details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: Last time we probed the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: Last time the condition transitioned
                                  from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Human-readable message indicating details
                                  about last transition.
                                type: string
                              reason:
                                description: Unique, this should be a short, machine
                                  understandable string that gives the reason for
                                  condition's last transition. If it reports "ResizeStarted"
                                  that means the underlying persistent volume is being
                                  resized.
                                type: string
                              status:
                                type: string
                              type:
                                description: PersistentVolumeClaimConditionType is
                                  a valid value of PersistentVolumeClaimCondition.Type
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        phase:
                          description: Phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: CollaSetStatus defines the observed state of CollaSet
            properties:
              availableReplicas:
                description: The number of available replicas (ready for at least
                  minReadySeconds) for this replica set.
                format: int32
                type: integer
              collisionCount:
                description: Count of hash collisions for the DaemonSet. The DaemonSet
                  controller uses this field as a collision avoidance mechanism when
                  it needs to create the name for the newest ControllerRevision.
                format: int32
                type: integer
              conditions:
                description: Represents the latest available observations of a CollaSet's
                  current state.
                items:
                  properties:
                    last_transition_time:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of in place set condition.
                      type: string
                  type: object
                type: array
              currentRevision:
                description: CurrentRevision, if not empty, indicates the version
                  of the CollaSet.
                type: string
              fullyLabeledReplicas:
                description: The number of pods that have labels matching the labels
                  of the pod template of the CollaSet.
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this CollaSet. It corresponds to the CollaSet's generation,
                  which is updated on mutation by the API Server.
                format: int64
                type: integer
              podContexts:
                description: PodContexts is a collections contains some contexts of
                  (recreated) pods.
                items:
                  description: PodContext describes the context need to be maintained
                    of (recreated) pods
                  properties:
                    diffConfigMap:
                      type: string
                    identity:
                      type: string
                  type: object
                type: array
              podIdentityType:
                description: PodIdentityType indicates the type of pod identity, like
                  Index, Ordinal.
                type: string
              podNumberSequenceIndex:
                description: PodNumberSequenceIndex records the max used pod number.
                format: int64
                type: integer
              podUpgradeDetails:
                description: PodUpgradeDetails contains all pod details about upgrading
                  Only work when PodUpgradeOrderPolicy is ByIndex
                items:
                  properties:
                    identity:
                      type: string
                    ip:
                      type: string
                    isReady:
                      type: boolean
                    isUpdatedRevision:
                      type: boolean
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    message:
                      type: string
                    name:
                      type: string
                    uid:
                      type: string
                    upgradeProgress:
                      type: string
                  type: object
                type: array
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
              revisionProgress:
                description: RevisionProgresses is a collection contains the progress
                  detail of each revision.
                items:
                  description: RevisionProgress describes the update progress detail
                    of one revision.
                  properties:
                    podIdentities:
                      description: PodIdentities contains the pod identities matching
                        this revision.
                      items:
                        type: string
                      type: array
                    revision:
                      type: string
                  required:
                  - revision
                  type: object
                type: array
              scheduledReplicas:
                description: the number of scheduled replicas for the CollaSet.
                format: int32
                type: integer
              updateTimestamp:
                description: UpdatedTimestamp record the timestamp this status is
                  updated. It helps to check the local cache is updated.
                format: int64
                type: integer
              updatedAvailableReplicas:
                description: The number of available current revision replicas for
                  this CollaSet. A pod is updated available means the pod is ready
                  for current revision and accessible
                format: int32
                type: integer
              updatedReadyReplicas:
                description: The number of ready current revision replicas for this
                  CollaSet. A pod is updated ready means all of its container has
                  bean updated by sigma.
                format: int32
                type: integer
              updatedReplicas:
                description: The number of pods in current version.
                format: int32
                type: integer
              updatedRevision:
                description: UpdatedRevision, if not empty, indicates the version
                  of the CollaSet currently updated.
                type: string
              upgradingReplicas:
                description: UpgradingReplicas indicates the number of pods during
                  upgrading.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
